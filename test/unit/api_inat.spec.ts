import { describe, expect, it } from "vitest";
// @ts-ignore
import {
  obterEspeciesMaisComuns,
  montarDetalhesDasEspecies,
} from "../../app/utils/apiEspecies";

const circulo = {
  type: "Feature",
  properties: {},
  geometry: {
    type: "Polygon",
    coordinates: [
      [
        [-46.79763568549719, -23.62772631437814],
        [-46.798396450097826, -23.627760553381254],
        [-46.79914988930336, -23.627862940703682],
        [-46.79988874822073, -23.62803249045769],
        [-46.800605912283864, -23.628267570043317],
        [-46.80129447573045, -23.6285659158613],
        [-46.80194780807291, -23.628924655099514],
        [-46.802559617924615, -23.629340333383556],
        [-46.80312401356781, -23.629808948025772],
        [-46.80363555968081, -23.630325986553324],
        [-46.804089329678554, -23.6308864701449],
        [-46.80448095316286, -23.63148500155869],
        [-46.80480665802495, -23.632115817090703],
        [-46.805063306794395, -23.632772842063915],
        [-46.80524842688372, -23.633449749314554],
        [-46.80536023443607, -23.634140020112827],
        [-46.80539765154501, -23.63483700693198],
        [-46.80536031667913, -23.63553399746153],
        [-46.805248588209295, -23.636224279248378],
        [-46.80506354100282, -23.636901204343502],
        [-46.804806956115726, -23.63755825333136],
        [-46.80448130368055, -23.638189098125295],
        [-46.80408971915293, -23.63878766292377],
        [-46.80363597314459, -23.63934818273985],
        [-46.803124435131835, -23.63986525893962],
        [-46.80256003138841, -23.64033391125406],
        [-46.80194819754729, -23.6407496257626],
        [-46.801294826248125, -23.6411083983855],
        [-46.80060621037465, -23.641406773465413],
        [-46.79988898242917, -23.641641877065677],
        [-46.799150050628924, -23.641811444664175],
        [-46.79839653234089, -23.64191384297519],
        [-46.79763568549719, -23.64194808568869],
        [-46.79687483865348, -23.64191384297519],
        [-46.796121320365444, -23.641811444664175],
        [-46.79538238856521, -23.641641877065677],
        [-46.79466516061973, -23.641406773465413],
        [-46.79397654474624, -23.6411083983855],
        [-46.793323173447085, -23.6407496257626],
        [-46.792711339605965, -23.64033391125406],
        [-46.79214693586254, -23.63986525893962],
        [-46.79163539784978, -23.63934818273985],
        [-46.79118165184145, -23.63878766292377],
        [-46.790790067313836, -23.638189098125295],
        [-46.79046441487865, -23.63755825333136],
        [-46.79020782999156, -23.636901204343502],
        [-46.79002278278508, -23.636224279248378],
        [-46.78991105431525, -23.63553399746153],
        [-46.78987371944937, -23.63483700693198],
        [-46.789911136558295, -23.634140020112827],
        [-46.790022944110646, -23.633449749314554],
        [-46.79020806419998, -23.632772842063915],
        [-46.79046471296942, -23.632115817090703],
        [-46.79079041783151, -23.63148500155869],
        [-46.79118204131582, -23.6308864701449],
        [-46.791635811313576, -23.630325986553324],
        [-46.79214735742656, -23.629808948025772],
        [-46.79271175306976, -23.629340333383556],
        [-46.793323562921465, -23.628924655099514],
        [-46.79397689526393, -23.6285659158613],
        [-46.794665458710504, -23.628267570043317],
        [-46.79538262277364, -23.62803249045769],
        [-46.79612148169101, -23.627862940703682],
        [-46.79687492089654, -23.627760553381254],
        [-46.79763568549719, -23.62772631437814],
      ],
    ],
  },
};

describe("API iNat", () => {
  it("should fetch species keys and counts from GBIF", async () => {
    const opcoes = {
      //circulo do turfjs
      geomCircle: circulo,
      maxSpecies: 10,
      taxonId: 12345, // Exemplo de taxonId
    };

    const result = await obterEspeciesMaisComuns(opcoes);

    expect(result.speciesKeys).toBeDefined();
    expect(result.speciesCounts).toBeInstanceOf(Map);
    expect(result.speciesKeys.length).toBeLessThanOrEqual(
      opcoes.maxSpecies * 2,
    );
  });

  it("should build species details with media", async () => {
    const speciesKeys = ["8264893", "10886629"];
    const maxSpecies = 10;
    const counts = new Map<string, number>([
      ["12345", 5],
      ["67890", 3],
    ]);

    const details = await montarDetalhesDasEspecies(
      speciesKeys,
      maxSpecies,
      counts,
    );

    expect(details.size).toBeGreaterThan(0);
    details.forEach((value, key) => {
      expect(value.speciesKey).toBe(key);
      expect(value.media).toBeDefined();
    });
  });
});
